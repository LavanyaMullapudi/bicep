name: Deploy Bicep file in Presbyterian
on:
  workflow_dispatch:
    inputs:
      location:
        required: true
        description: 'deployment location'
        type: string
      ApplicationInsightsName:
        description: select the environment
        required: true
        type: choice
        # options:
        #   - dev
        #   - stg
        #   - prd
      environmentType:
        required: true
        description: "createdbyemail"
        type: string      
      emailinternal:
        required: true
        description: "project"
        type: string
      appserviceName:
        required: true
        description: "the deployment sequence that needs to be deployment"
        type: choice
        # options:
        #   - sequence1
        #   - sequence2
        #   - sequence3
        #   - sequence4
        #   - sequence5
      resourcegroupname:
          required: true
          description: name of the resouce group in which the rx applications will be created
          type: string        

 
jobs:
  build-and-deploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - name: Set up parameters for each sequence
      id: set-params
      run: |
        $parameters='{"location": "${{ inputs.location }}","ApplicationInsightsName": "${{ inputs.ApplicationInsightsName }}","environmentType": "${{ inputs.environmentType }}","emailinternal": "${{ inputs.emailinternal }}","appserviceName": "${{ inputs.appserviceName }}","resourcegroupname": "${{ inputs.resourcegroupname }}"}'
        # sequenceparam='{
        #   "sequence1": {},
        #   "sequence2": {"location": "${{ inputs.location }}", "ApplicationInsightsName": "centralus"},
        #   "sequence3": {"location": "${{ inputs.location }}", "postgresdbpassword": "${{ inputs.postgresdbpassword }}"},
        #   "sequence4": {"location": "${{ inputs.location }}", "vmimagereferencename": "${{ inputs.vmimagereferencename }}", "vmsshkey": "${{ inputs.vmsshkey }}"}
        #   }'
        # commonparam='{"location": "${{ inputs.location }}", "environment": "${{ inputs.environment }}", "createdbyemail": "${{ inputs.createdbyemail }}", "vnetname": "${{ inputs.vnetname }}", "resourcegroupname": "${{ inputs.resourcegroupname }}"}'
   
        # sequence="${{ inputs.sequence }}"
        # # Extract the specific sequence parameters
        # sequence_params=$(echo $sequenceparam | jq -r --arg seq "$sequence" '.[$seq]')
        
        # echo "Sequence Parameters"
        # echo "$sequence_params"
       
        # echo "common Parameters"
        # echo "$commonparam"

        # # Combine the common parameters with the sequence-specific parameters
        # parameters=$(echo $commonparam | jq -r --argjson seq_params "$sequence_params" '. * $seq_params')
        # echo "Parameters for deployment:"
        # echo "$parameters" >> param.json
        # cat param.json
        # pwd
        # # Parse parameters to JSON format
        # echo "Parameters for json deployment:"
        # parameters_json=$(echo "$parameters" | jq -c .)
        # echo "$parameters_json" >> param1.json
        # echo "::set-output name=fileparameters_json::$(cat param1.json)"
        # echo "::set-output name=outparameters_json::'$parameters_json'"
          echo "::set-output name=outparameters::$parameters"
      shell: bash

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Azure CLI
      env:
          AZURE_SUBSCRIPTION_ID: "89a1afbb-99a3-4844-a9b3-55d84d47f784"
          AZURE_TENANT_ID: "e00b6687-c776-4514-8a12-5549c0aabb79"
          AZURE_CLIENT_ID: "1bca4da6-09b0-42ea-97df-bda32e645f38"
          AZURE_CLIENT_SECRET: "WoM8Q~g5U-q0gs~wa0EHnU1o_yo2VsjsrE-_9cwS"
      uses: azure/cli@v1
      with:
        azcliversion: 2.33.0
        inlinescript: 
              az login --service-principal --tenant $AZURE_TENANT_ID -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --output none

    - name: Deploy Bicep file
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: ${{ secrets.PRESBYTERIAN_SUBSCRIPTION }}
        scope: subscription
        region: ${{ github.event.inputs.location }}
        template: alerting-webapp.bicep
        parameters: ${{ steps.set-params.outputs.parameters_json }}
        failOnStdErr: false

             
 
