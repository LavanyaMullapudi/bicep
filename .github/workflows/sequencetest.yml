name: Deploy Bicep 
on:
  workflow_dispatch:
    inputs:
      resourceGroupName:
        required: true
        description: 'resourceGroupName'
        type: string
      cosmosDbAccountName:
        description: "cosmosDbAccountName"
        required: true
      existingActionGroupName:
        required: true
        description: "existingActionGroupName"
        type: string
       

 
jobs:
  build-and-deploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - name: Set up parameters
      id: set-params
      run: |
        echo "Setting parameters..."
        parameters='{"resourceGroupName": "${{ inputs.resourceGroupName }}","cosmosDbAccountName": "${{ inputs.cosmosDbAccountName }}","existingActionGroupName": "${{ inputs.existingActionGroupName }}"}'
        echo "::set-output name=parameters_json::$parameters"
      shell: bash
      
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Azure CLI
      env:
          AZURE_SUBSCRIPTION_ID: "89a1afbb-99a3-4844-a9b3-55d84d47f784"
          AZURE_TENANT_ID: "e00b6687-c776-4514-8a12-5549c0aabb79"
          AZURE_CLIENT_ID: "1bca4da6-09b0-42ea-97df-bda32e645f38"
          AZURE_CLIENT_SECRET: "WoM8Q~g5U-q0gs~wa0EHnU1o_yo2VsjsrE-_9cwS"
      uses: azure/cli@v1
      with:
        azcliversion: 2.33.0
        inlinescript: 
              az login --service-principal --tenant $AZURE_TENANT_ID -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --output none
              
    - name: Set Azure CLI configuration permissions
      run: sudo chown -R $USER ~/.azure
      if: runner.os == 'Linux'
        
    - name: Deploy Bicep file
      uses: azure/arm-deploy@v2
      with:
        subscriptionId: '89a1afbb-99a3-4844-a9b3-55d84d47f784'
        scope: subscription
        region: 'Global'
        template: alerting-cosmosdb.bicep
        parameters: ${{ steps.set-params.outputs.parameters }}
        failOnStdErr: false

             
 
